# Types
type Campaign {
  id: String
  cause: String
  description: String
  goal: Float
  who: String
  url: String
  picture: String
  created: String
  createdAtBlock: String
  startDate: String
  endDate: String
  status: String
  raised: String
  fundingStatus: Funding
  ismine: Boolean
  iswatchonly: Boolean
  newsItems: [NewsItem]
  pay2AuthAddress: String
  claimed: Boolean
}

type NewsItem {
 created: String
 message: String
}

type Funding {
 receivedSinceCreation: String
 withdrawnSinceCreation: String
 balanceSinceCreation: String
}

# Inputs
input updateMediaDetailsInput {
  cause: String
  goal: Float
  who: String
  url: String
  startDate: String
  endDate: String
  description: String
  picture: String
}

input PopNewsItemInput {
  newsItem: String
}

# Queries and mutations
type Mutation {
  createCampaign(id: String): Campaign
  updateMediaDetails(id: String, input: updateMediaDetailsInput): Campaign
  claimCampaign(id: String): Campaign
  popNewsItem(id: String, input: PopNewsItemInput): Campaign
  removeCampaign(id: String): Campaign
}

type Query {
  getCampaign(id: String): Campaign 
  getCampaigns(searchTerm: String): [Campaign] 
  getAllCampaigns: [Campaign] 
  getPay2AuthTx(id: String, tip: Float, confirmedInNBlocks: Int,  txMessage: String): Campaign
  getRedeemTx(id: String, tipPercent: Float, confirmedInNBlocks: Int, destAddr: String, txMessage: String): Campaign
}
